tinymce.PluginManager.add('bmgallery', function(editor) {
	var wrapper = '<div class="bm-preview" data-mce-resize="1">### Gallery content ###</div>';
	editor.on('BeforeSetContent', function(e) {
		e.content = e.content.replace(/\[gallery(.*?)\]/g, function(match) {
			window.tmp = match;
			var attributes = /(.*?)/.exec(match)
			console.log(attributes);
			return wrapper;
		});
	});

	editor.on('ResolveName', function(e) {
		if (e.target.nodeName == 'DIV' && editor.dom.hasClass(e.target, 'bm-preview')) {
			e.name = 'gallery';
		}
	});

	function getShortCode() {
		//todo: temp solution
		return window.tmp;
	};

	editor.on('PreInit', function() {
		editor.serializer.addNodeFilter('div', function(nodes) {
			var i = nodes.length, node, className;
			while (i--) {
				node = nodes[i];
				className = node.attr('class');
				if (className && className.indexOf('bm-preview') !== -1) {
					node.type = 3;
					node.value = getShortCode();
				}
			}
		});
	});

	editor.on('click', function(e) {
		e = e.target;
		if (e.nodeName === 'DIV' && editor.dom.hasClass(e, 'bm-preview')) {
			editor.selection.select(e);
		}
	});

	editor.addButton('bmgallery', {
		text: 'Gallery',
		icon: false,
		onclick: function() {
			editor.windowManager.open({
				title: 'Gallery Settings',
				body: [
					{type: 'textbox', name: 'title', label: 'Title'},
					{type: 'button', name: 'd', label: 'Title'}
				],
				onsubmit: function(e) {
					editor.insertContent('[gallery ids="' + e.data.title + '"]')
				}
			});
			//Blogmaster.openFileBrowser('file', '||||feature-image|Blogmaster.fileFn.checkUniqueElement||Blogmaster.fileFn.importElement');
		}
	});
});